{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/api.js","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovieByTitle","title","a","fetch","response","json","data","ok","Error","FindMovie","addMovie","useState","errNotFound","setErrNotFound","movieTitle","setMovieTitle","setMovie","searchMovies","e","preventDefault","resultMovies","onSubmit","htmlFor","type","id","placeholder","autoComplete","classNames","value","onChange","text","target","onClick","App","setMovies","find","el","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6d91276.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const getMovieByTitle = async (title) => {\n  const APIkey = 'a2b58a28';\n  const moviesUrl = 'https://www.omdbapi.com/?apikey=';\n  const response = await fetch(`${moviesUrl}${APIkey}&t=${title}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error('Error with request');\n  }\n\n  return data;\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovieByTitle } from '../../utils/api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [errNotFound, setErrNotFound] = useState(false);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const searchMovies = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const resultMovies = await getMovieByTitle(movieTitle);\n\n    if (resultMovies.Error) {\n      setErrNotFound(true);\n\n      return;\n    }\n\n    setMovie(resultMovies);\n  };\n\n  const handelChange = (text: string) => {\n    if (text !== movieTitle) {\n      setErrNotFound(false);\n    }\n\n    setMovieTitle(text);\n  };\n\n  const addToList = () => {\n    if (movie) {\n      addMovie(movie);\n      setMovieTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => searchMovies(e)}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              autoComplete=\"off\"\n              className={classNames('input', { 'is-danger': errNotFound })}\n              value={movieTitle}\n              onChange={(e) => handelChange(e.target.value)}\n            />\n          </div>\n\n          {errNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.find(el => el.imdbID === movie.imdbID)) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}